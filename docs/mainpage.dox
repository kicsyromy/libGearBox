/*!
\mainpage Documentation
## Getting started

The library offers a simple interface to query for data from a Transmission RPC
server. The two main components are gearbox::Session and gearbox::Torrent.

The session component offers the ability to query for general statistics and
information that is generaly valid for the server as a whole, while the
torrent component offers information about one particular torrent.

All objects returned by any of the methods are owned by the calee and their
lifetime is subjective to the scope in which these objects were created.

The first thing an application developer, that wishes to use the library, needs
to to is connect to the appropriate server by creating a gearbox::Session
instance and setting the appropriate parameters for the connection. See the API
documentation on gearbox::Session for and example on how this can be done.

Calling gearbox::Session::torrents() yields the list of all torrents present on
the server completely unfiltered. The state of each torrent can be queried
using gearbox::Torrent's appropriate methods. For example if the torrent is
gearbox::Torrent::Status::Stopped it can be started using the
gearbox::Torrent::start() method.

The list of files, again unfiltered, can be obtained via the
gearbox::Torrent::files() method call, or if a tree-like structure for the
downloaded content is desired the gearbox::Torrent::content() can be called
instead.

Each gearbox::File has a set of basic properties, like a name, how much of
the file is actually downloaded, whether it is to be downloaded at all. A handy
property is the gearbox::File::type() which is the MIME type of the file in
question. Based on this information an application developer could, for
example, set appropriate icon in the user interface.

All method calls are synchronous which means they will block the main thread of
the application. It is recommended to call functions that make RPC calls on a
different thread than main. These methods are implemented in a thread-safe
manner.
*/
